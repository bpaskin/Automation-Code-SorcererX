---
- hosts: all
  become: yes
  tasks:
    - name: Remove proxy from /etc/apt/apt.conf
      command: >
        sed --in-place '/^Acquire::http::Proxy/d' /etc/apt/apt.conf
      when: 'grep Acquire::http::Proxy /etc/apt/apt.conf'

    - name: Set cacher variables
      set_fact:
        servers: []
      when: node['apt']

    - name: Add cacher server to list
      set_fact:
        servers:
          - name: "{{ node['apt']['cacher_ipaddress'] }}"
            ipaddress: "{{ node['apt']['cacher_ipaddress'] }}"
            apt:
              cacher_port: "{{ node['apt']['cacher_port'] }}"
              cacher_interface: "{{ node['apt']['cacher_interface'] }}"
              cacher_ssl_support: "{{ node['apt']['cacher_ssl_support'] }}"
      when:
        - node['apt']['cacher_ipaddress']
        - not node['apt']['caching_server']

    - name: Add caching server to list
      set_fact:
        servers: "{{ servers + [node] }}"
      when: node['apt']['caching_server']
      run_once: yes
      when: not node['apt']['compiletime']

    - name: Search for apt caching servers
      uri:
        url: "https://<chef_server_url>/organizations/<orgname>/nodes"
        return_content: yes
        headers:
          Content-Type: application/json
        method: GET
        body_format: json
        validate_certs: no
        status_code: 200
      register: node_query
      when: not node['apt']['compiletime']
      run_once: yes
      until: node_query.status == 200
      retries: 10
      delay: 5
      when: node['apt']['cacher-client']['restrict_environment']

    - name: Filter nodes with apt caching server
      set_fact:
        servers: "{{ servers + node_query.json|selectattr('apt.caching_server', 'defined')|list }}"
      when: node_query.status == 200

    - name: Find cacher-ng server IP
      set_fact:
        cacher_ipaddress: "{{ (servers[0].cacher_interface | default(servers[0].ipaddress) | ipaddr('address')) }}"
      when: servers|length > 0

    - name: Configure apt cacher
      template:
        src: 01proxy.j2
        dest: /etc/apt/apt.conf.d/01proxy
        owner: root
        group: root
        mode: '00644'
      vars:
        proxy: "{{ cacher_ipaddress }}"
        port: "{{ servers[0].apt.cacher_port }}"
        proxy_ssl: "{{ servers[0].apt.cacher_ssl_support }}"
        bypass: "{{ node['apt']['cache_bypass'] }}"
      notify:
        - run apt-get update
      when: servers|length > 0

    - name: Delete apt cacher configuration
      file:
        path: /etc/apt/apt.conf.d/01proxy
        state: absent
      when: servers|length == 0

    - name: Include default apt recipe
      include_role:
        name: apt
...