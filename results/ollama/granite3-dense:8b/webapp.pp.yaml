```yaml
---
- name: Deploy a rails web application
  hosts: all
  become: yes
  vars:
    service_webapp_repo: "{{ get_cloudify_attribute('repo', 'service', 'redmine_puppet', 'webapp') }}"
    service_webapp_tag: "{{ get_cloudify_attribute('tag', 'service', 'redmine_puppet', 'webapp') }}"
    WEBAPP_PATH: "/opt/webapps/rails"

  tasks:
    - name: Notify about deployment start
      debug:
        msg: "Beginning deploy of {{ service_webapp_repo }} version {{ service_webapp_tag }} into {{ WEBAPP_PATH }}"

    - name: Install required packages
      apt:
        name:
          - rubygems
          - ruby-dev
          - libxml2-dev
          - libxslt-dev
          - libsqlite3-dev
          - libmysqlclient-dev
        state: present

    - name: Install bundler
      gem:
        name: bundler
        state: present

    - name: Ensure apache2 is installed
      apt:
        name: apache2
        state: present

    - name: Ensure apache module is enabled
      apache2_module:
        name: proxy_http
        state: present

    - name: Ensure webapp directory exists
      file:
        path: "{{ WEBAPP_PATH }}"
        state: directory

    - name: Clone webapp repo
      git:
        repo: "{{ service_webapp_repo }}"
        dest: "{{ WEBAPP_PATH }}"
        update: yes

    - name: Checkout specified tag
      git:
        repo: "{{ service_webapp_repo }}"
        path: "{{ WEBAPP_PATH }}"
        version: "{{ service_webapp_tag }}"

    - name: Add unicorn to Gemfile
      copy:
        content: "gem 'unicorn'\n"
        dest: "{{ WEBAPP_PATH }}/Gemfile.local"

    - name: Install gems
      command: bundle install --without development test rmagick postgresql
      args:
        chdir: "{{ WEBAPP_PATH }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/bin:/usr/local/bin"
      register: bundle_install

    - name: Generate secret
      command: bundle exec rake generate_session_store
      args:
        chdir: "{{ WEBAPP_PATH }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/bin:/usr/local/bin"
      when: bundle_install.rc == 0

    - name: Set MySQL connection details
      blockinfile:
        path: "{{ WEBAPP_PATH }}/config/database.yml"
        block: |
          production:
            <<: *default
            url: "mysql2://"
            database: "{{ db_name }}"
            username: "{{ db_user }}"
            password: "{{ db_password }}"
            host: "{{ db_ip }}"
        create: yes
        backup: yes
      vars:
        db_user: "{{ get_cloudify_attribute('user', 'service', 'redmine_puppet', 'mysql') }}"
        db_password: "{{ get_cloudify_attribute('password', 'service', 'redmine_puppet', 'mysql') }}"
        db_name: "{{ get_cloudify_attribute('db_name', 'service', 'redmine_puppet', 'mysql') }}"
        db_ip: "{{ get_cloudify_attribute('ip', 'service', 'redmine_puppet', 'mysql') }}"

    - name: Run rake tasks
      command: bundle exec rake db:migrate RAILS_ENV=production && bundle exec rake redmine:load_default_data RAILS_ENV=production REDMINE_LANG=en
      args:
        chdir: "{{ WEBAPP_PATH }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/bin:/usr/local/bin"
      when: run_rake_tasks.rc == 0
      register: run_rake_tasks

    - name: Create rails user
      user:
        name: rails
        shell: /bin/sh
        home: "{{ WEBAPP_PATH }}"
        state: present

    - name: Set permissions for webapp files
      file:
        path:
          - "{{ WEBAPP_PATH }}/files"
          - "{{ WEBAPP_PATH }}/log"
          - "{{ WEBAPP_PATH }}/tmp"
          - "{{ WEBAPP_PATH }}/public"
        owner: rails
        group: rails
        mode: '0755'

    - name: Set up unicorn service
      upstart_job:
        app_name: unicorn
        command: start-stop-daemon --start -c rails -d /opt/webapps/rails --exec /usr/local/bin/bundle -- exec unicorn_rails -E production
        start_secs: 10
        requires:
          - bundle_install
          - "File[{{ WEBAPP_