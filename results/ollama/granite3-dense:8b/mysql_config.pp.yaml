Here is the Ansible Playbook equivalent of the provided Puppet module:

```yaml
- name: Configure MySQL
  hosts: your_host
  vars:
    root_password: changeme
    bind_address: $::ipaddress
    port: 3306
    etc_root_password: true
    service_name: mysql
    config_file: /etc/mysql/my.cnf
    socket: /var/run/mysqld/mysqld.sock
    pidfile: /var/run/mysqld/mysqld.pid
    datadir: /var/lib/mysql
    ssl: false
    ssl_ca:
    ssl_cert:
    ssl_key:
    log_error: /var/log/mysql/error.log
    default_engine: UNSET
    root_group: root
    restart: true

  tasks:
    - name: Create root password file
      file:
        path: /root/.my.cnf
        owner: root
        group: root
        mode: 0400
        content: |
          [client]
          user = root
          password = {{ root_password }}

    - name: Set MySQL root password
      command: mysqladmin -u root -p'{{ old_root_password }}' password '{{ root_password }}'
      args:
        creates: /var/run/mysqld/mysqld.pid
      when: root_password != 'UNSET'

    - name: Restart MySQL service
      service:
        name: mysql
        state: restarted
      when: restart == true
```

Please replace `your_host` with the appropriate host or group in your Ansible inventory. This playbook assumes that the MySQL service is installed and configured to start on boot. It also assumes that the MySQL service is managed by systemd, as indicated by the `state: restarted` argument in the `service` module.

The playbook creates a root password file at `/root/.my.cnf` with the root password, sets the MySQL root password using the `mysqladmin` command, and restarts the MySQL service if the `restart` variable is set to `true`.