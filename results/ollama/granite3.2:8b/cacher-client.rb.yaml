- hosts: all
  become: yes

  tasks:
    - name: Remove Acquire::http::Proxy lines from /etc/apt/apt.conf
      command: "sed --in-place '/^Acquire::http::Proxy/d' /etc/apt/apt.conf"
      when: "grep Acquire::http::Proxy /etc/apt/apt.conf"

    - name: Find apt-cacher-ng servers
      set_fact:
        servers: []
      when: node['apt'] is defined

    - name: Add apt cacher servers to the list
      set_fact:
        servers: "{{ servers + [item] }}"
      with_items:
        - {{ (node['apt']['cacher_ipaddress'] | default(node['apt']['caching_server'])).split(':')[0] }}:{{ (node['apt']['cacher_ipaddress'] | default(node['apt']['caching_server'])).split(':')[-1] }}

      when:
        - node['apt']['cacher_ipaddress']
        - node['apt']['caching_server']

    - name: Include apt::default recipe
      include_recipe: apt::default
      when: servers | length > 0

    - name: Configure apt to use the first cacher in the list
      block:
        - name: Determine cacher IP address
          set_fact:
            cacher_ipaddress: "{{ (interface_ipaddress(item, item['apt']['cacher_interface']) | default(item.ipaddress)) if item['apt']['cacher_interface'] else item.ipaddress }}"

        - name: Create /etc/apt/apt.conf.d/01proxy file
          template:
            src: 01proxy.erb
            dest: /etc/apt/apt.conf.d/01proxy
            owner: root
            group: root
            mode: '00644'
            variables:
              proxy: "{{ cacher_ipaddress }}"
              port: "{{ servers[0]['apt']['cacher_port'] }}"
              proxy_ssl: "{{ servers[0]['apt']['cacher_ssl_support'] }}"
              bypass: "{{ node['apt']['cache_bypass'] }}"
            notify:
              - run apt-get update
          when: servers | length > 0
      when: servers | length > 0

    - name: Delete /etc/apt/apt.conf.d/01proxy if no cacher is found
      file:
        path: /etc/apt/apt.conf.d/01proxy
        state: absent
      when: servers | length == 0