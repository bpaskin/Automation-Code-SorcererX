```yaml
---
- hosts: all
  become: yes
  tasks:
    - name: Notify beginning deploy
      debug:
        msg: "Beginning deploy of {{ service_webapp_repo }} version {{ service_webapp_tag }} into {{ WEBAPP_PATH }}"

    - name: Install required packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - rubygems
        - ruby-dev
        - libxml2-dev
        - libxslt-dev
        - libsqlite3-dev
        - libmysqlclient-dev

    - name: Install bundler
      gem:
        name: bundler
        state: present
      when: ansible_os_family == 'RedHat'

    - name: Ensure Apache is installed
      apt:
        name: apache2
        state: present

    - name: Ensure proxied HTTP module is enabled
      command: a2enmod proxy_http
      become: yes

    - name: Ensure webapps directory exists
      file:
        path: /opt/webapps
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Clone webapp repository
      git:
        repo: "{{ service_webapp_repo }}"
        dest: "{{ WEBAPP_PATH }}"
        update: yes

    - name: Checkout specified tag
      git:
        repo: "{{ service_webapp_repo }}"
        dest: "{{ WEBAPP_PATH }}"
        version: "{{ service_webapp_tag }}"

    - name: Add 'unicorn' to Gemfile
      copy:
        dest: "{{ WEBAPP_PATH }}/Gemfile.local"
        content: 'gem 'unicorn''
      when: ansible_os_family == 'RedHat'

    - name: Install gems
      command: bundle install --without development test rmagick postgresql
      args:
        chdir: "{{ WEBAPP_PATH }}"
        creates: "{{ WEBAPP_PATH }}/vendor/bundle"

    - name: Generate secret key
      command: bundle exec rake generate_session_store
      args:
        chdir: "{{ WEBAPP_PATH }}"

    - name: Configure database.yml
      template:
        src: "webapp/database.yml.erb"
        dest: "{{ WEBAPP_PATH }}/config/database.yml"
      variables:
        db_user: "{{ get_cloudify_attribute('user', 'service', 'redmine_puppet', 'mysql') }}"
        db_password: "{{ get_cloudify_attribute('password', 'service', 'redmine_puppet', 'mysql') }}"
        db_name: "{{ get_cloudify_attribute('db_name', 'service', 'redmine_puppet', 'mysql') }}"
        db_ip: "{{ get_cloudify_attribute('ip', 'service', 'redmine_puppet', 'mysql') }}"
      when: ansible_os_family == 'RedHat'

    - name: Run database migrations and load default data
      command: bundle exec rake db:migrate RAILS_ENV=production && bundle exec rake redmine:load_default_data RAILS_ENV=production REDMINE_LANG=en
      args:
        chdir: "{{ WEBAPP_PATH }}"

    - name: Create rails user
      user:
        name: rails
        shell: /bin/sh
        home: "{{ WEBAPP_PATH }}"
        createhome: yes
        comment: rails
        groups: root
        append: yes
        system: yes

    - name: Ensure directories owned by rails user
      file:
        path: "{{ item }}"
        owner: rails
        group: rails
        mode: '0755'
        state: directory
      with_items:
        - "{{ WEBAPP_PATH }}/files"
        - "{{ WEBAPP_PATH }}/log"
        - "{{ WEBAPP_PATH }}/tmp"
        - "{{ WEBAPP_PATH }}/public"

    - name: Configure Unicorn
      upstart_job:
        name: unicorn
        command: start-stop-daemon --start -c rails -d {{ WEBAPP_PATH }} --exec /usr/local/bin/bundle -- exec unicorn_rails -E production
        ensure: present

    - name: Disable default Apache vhost
      command: /usr/sbin/a2dissite default
      when: ansible_os_family == 'Debian'

    - name: Configure Apache vhost
      apache_vhost:
        name: webapp
        template: "webapp/webapp.erb"
        listen: 80
        port: 80
        servername: localhost
        docroot: "{{ WEBAPP_PATH }}/public"
        user: rails
        group: rails
      when: ansible_os_family == 'Debian'
...
```