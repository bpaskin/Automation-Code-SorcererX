---
- name: Configure MySQL
  hosts: mysql_servers
  become: yes
  vars:
    root_password: 'UNSET'
    old_root_password: ''
    bind_address: '0.0.0.0'
    port: '3306'
    etc_root_password: false
    service_name: 'mysql'
    config_file: '/etc/my.cnf'
    socket: '/var/run/mysqld/mysqld.sock'
    pidfile: '/var/run/mysqld/mysqld.pid'
    datadir: '/var/lib/mysql'
    ssl: false
    ssl_ca: ''
    ssl_cert: ''
    ssl_key: ''
    log_error: '/var/log/mysql/error.log'
    default_engine: 'InnoDB'
    root_group: 'mysql'
    restart: true

  tasks:
    - name: Ensure MySQL directories
      file:
        path: "/etc/mysql"
        state: directory
        mode: '0755'

    - name: Ensure MySQL config directories
      file:
        path: "/etc/mysql/conf.d"
        state: directory
        mode: '0755'

    - name: Configure my.cnf
      template:
        src: my.cnf.erb
        dest: "{{ config_file }}"
        mode: '0644'
      when: ssl_ca is defined and ssl_cert is defined and ssl_key is defined

    - name: Set MySQL root password
      command: "mysqladmin -u root {{ old_root_password|default('') }} password '{{ root_password }}'"
      register: mysql_rootpw_result
      changed_when: mysql_rootpw_result.rc != 0
      become: yes
      when: root_password != 'UNSET'

    - name: Ensure root .my.cnf file exists
      file:
        path: "/root/.my.cnf"
        state: present
        mode: '0400'
      when: root_password != 'UNSET'

    - name: Ensure etc/my.cnf exists
      file:
        path: "/etc/my.cnf"
        state: present
        mode: '0644'
      when: etc_root_password

    - name: Restart MySQL service if needed
      service:
        name: "{{ service_name }}"
        state: restarted
      when: restart

    - name: Ensure MySQL socket exists
      file:
        path: "{{ socket }}"
        state: socket
        mode: '0755'