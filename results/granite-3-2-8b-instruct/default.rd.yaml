
---
- name: Deploy Rails Webapp
  hosts: all
  become: yes
  vars:
    WEBAPP_PATH: "/opt/webapps/rails"
    service_webapp_repo: "{{ lookup('env', 'service_webapp_repo') }}"
    service_webapp_tag: "{{ lookup('env', 'service_webapp_tag') }}"
    db_user: "{{ lookup('env', 'user') }}"
    db_password: "{{ lookup('env', 'password') }}"
    db_name: "{{ lookup('env', 'db_name') }}"
    db_ip: "{{ lookup('env', 'ip') }}"

  tasks:
    - name: Begin deploy of {{ service_webapp_repo }} version {{ service_webapp_tag }} into {{ WEBAPP_PATH }}
      debug:
        msg: "Beginning deploy of {{ service_webapp_repo }} version {{ service_webapp_tag }} into {{ WEBAPP_PATH }}"

    - name: Install required packages
      apt:
        name:
          - rubygems
          - ruby-dev
          - libxml2-dev
          - libxslt-dev
          - libsqlite3-dev
          - libmysqlclient-dev
        state: present

    - name: Install bundler
      gem:
        name: bundler
        state: present
        gem_home: /usr/local
        gem_binary: /usr/local/bin/gem
        extra_gems:
          - rubygems

    - name: Enable and start apache
      service:
        name: apache2
        state: started
        enabled: yes

    - name: Create webapp directory
      file:
        path: "{{ WEBAPP_PATH }}"
        state: directory
        mode: '0755'

    - name: Clone webapp repository
      git:
        repo: "{{ service_webapp_repo }}"
        dest: "{{ WEBAPP_PATH }}"
        update: yes

    - name: Checkout webapp tag
      git:
        repo: "{{ service_webapp_repo }}"
        dest: "{{ WEBAPP_PATH }}"
        version: "{{ service_webapp_tag }}"

    - name: Add unicorn to Gemfile
      lineinfile:
        path: "{{ WEBAPP_PATH }}/Gemfile.local"
        line: "gem 'unicorn'"

    - name: Install gems
      command: bundle install --without development test rmagick postgresql
      args:
        chdir: "{{ WEBAPP_PATH }}"
        creates: "{{ WEBAPP_PATH }}/config/database.yml"

    - name: Generate secret key
      command: bundle exec rake generate_session_store
      args:
        chdir: "{{ WEBAPP_PATH }}"
        creates: "{{ WEBAPP_PATH }}/config/database.yml"

    - name: Configure database.yml
      template:
        src: "webapp/database.yml.erb"
        dest: "{{ WEBAPP_PATH }}/config/database.yml"
      vars:
        db_user: "{{ db_user }}"
        db_password: "{{ db_password }}"
        db_name: "{{ db_name }}"
        db_ip: "{{ db_ip }}"

    - name: Run database migrations and load default data
      command: bundle exec rake db:migrate RAILS_ENV=production && bundle exec rake redmine:load_default_data RAILS_ENV=production REDMINE_LANG=en
      args:
        chdir: "{{ WEBAPP_PATH }}"
        creates: "{{ WEBAPP_PATH }}/config/database.yml"

    - name: Create rails user
      user:
        name: rails
        home: "{{ WEBAPP_PATH }}"
        shell: /bin/sh
        state: present

    - name: Set ownership of webapp directories
      file:
        path:
          - "{{ WEBAPP_PATH }}/files"
          - "{{ WEBAPP_PATH }}/log"
          - "{{ WEBAPP_PATH }}/tmp"
          - "{{ WEBAPP_PATH }}/public"
        owner: rails
        group: rails
        mode: '0755'

    - name: Configure unicorn
      copy:
        content: |
          start-stop-daemon --start -c rails -d {{ WEBAPP_PATH }} --exec /usr/local/bin/bundle -- exec unicorn_rails -E production
        dest: /etc/init/unicorn.conf
      notify: Restart unicorn

    - name: Restart unicorn
      service:
        name: unicorn
        state: restarted

    - name: Configure apache vhost
      template:
        src: "webapp/webapp.erb"
        dest: /etc/apache2/sites-available/webapp.conf
      notify: Restart apache

    - name: Enable apache vhost
      command: a2ensite webapp.conf
      args:
        creates: /etc/apache2/sites-enabled/webapp.conf

    - name: Disable default apache vhost
      command: a2dissite default
      args:
        requires:
          - service: apache2
          - enabled: yes

---

[OUTPUT]
- name: Deploy Rails Webapp
  hosts: all
  become: yes
  vars:
    WEBAPP_PATH: "/opt/webapps/rails"
    service_webapp_repo: "{{ lookup('env', 'service_webapp_repo') }}"
    service_webapp_tag: "{{ lookup('env', 'service_webapp_tag') }}"
    db_user: "{{ lookup('env', 'user') }}"
    db_password: "{{ lookup('env', 'password') }}"
    db_name: "{{ lookup('env', 'db_name') }}"
    db_ip: "{{ lookup('env', 'ip') }}"

  tasks:
    - name: Begin deploy of {{ service_webapp_repo }} version {{ service_webapp_tag }} into {{ WEBAPP_PATH }}
      debug:
        msg: "Beginning deploy of {{ service_webapp_repo }} version {{ service_webapp_tag }} into {{ WEBAPP_PATH }}"

    - name: Install required packages
      apt:
        name:
          - rubygems
          - ruby-dev
          - libxml2-dev
          - libxslt-dev
          - libsqlite3-dev
          - libmysqlclient-dev
        state: present

    - name: Install bundler
      gem:
        name: bundler
        state: present
        gem_home: /usr/local
        gem_binary: /usr/local/bin/gem
        extra_gems:
          - rubygems

    - name: Enable and start apache
      service:
        name: apache2
        state: started
        enabled: yes

    - name: Create webapp directory
      file:
        path: "{{ WEBAPP_PATH }}"
        state: directory
        mode: '0755'

    - name: Clone webapp repository
      git:
        repo: "{{ service_webapp_repo }}"
        dest: "{{ WEBAPP_PATH }}"
        update: yes

    - name: Checkout webapp tag
      git:
        repo: "{{ service_webapp_repo }}"
        dest: "{{ WEBAPP_PATH }}"
        version: "{{ service_webapp_tag }}"

    - name: Add unicorn to Gemfile
      lineinfile:
        path: "{{ WEBAPP_PATH }}/Gemfile.local"
        line: "gem 'unicorn'"

    - name: Install gems
      command: bundle install --without development test rmagick postgresql
      args:
        chdir: "{{ WEBAPP_PATH }}"
        creates: "{{ WEBAPP_PATH }}/config/database.yml"

    - name: Generate secret key
      command: bundle exec rake generate_session_store
      args:
        chdir: "{{ WEBAPP_PATH }}"
        creates: "{{ WEBAPP_PATH }}/config/database.yml"

    - name: Configure database.yml
      template:
        src: "webapp/database.yml.erb"
        dest: "{{ WEBAPP_PATH }}/config/database.yml"
      vars:
        db_user: "{{ db_user }}"
        db_password: "{{ db_password }}"
        db_name: "{{ db_name }}"
        db_ip: "{{ db_ip }}"

    - name: Run database migrations and load default data
      command: bundle exec rake db:migrate RAILS_ENV=production && bundle exec rake redmine:load_default_data RAILS_ENV=production REDMINE_LANG=en
      args:
        chdir: "{{ WEBAPP_PATH }}"
        creates: "{{ WEBAPP_PATH }}/config/database.yml"

    - name: Create rails user
      user:
        name: rails
        home: "{{ WEBAPP_PATH }}"
        shell: /bin/sh
        state: present

    - name: Set ownership of webapp directories
      file:
        path:
          - "{{ WEBAPP_PATH }}/files"
          - "{{ WEBAPP_PATH }}/log"
          - "{{ WEBAPP_PATH }}/tmp"
          - "{{ WEBAPP_PATH }}/public"
        owner: rails
        group: rails
        mode: '0755'

    - name: Configure unicorn
      copy:
        content: |
          start-stop-daemon --start -c rails -d {{ WEBAPP_PATH }} --exec /usr/local/bin/bundle -- exec unicorn_rails -E production
        dest: /etc/init/unicorn.conf
      notify: Restart unicorn

    - name: Restart unicorn
      service:
        name: unicorn
        state: restarted

    - name: Configure apache vhost
      template:
        src: "webapp/webapp.erb"
        dest: /etc/apache2/sites-available/webapp.conf
      notify: Restart apache

    - name: Enable apache vhost
      command: a2ensite webapp.conf
      args:
        creates: /etc/apache2/sites-enabled/webapp.conf

    - name: Disable default apache vhost
      command: a2dissite default
      args:
        requires:
          - service: apache2
          - enabled: yes