Here is my response:

```yaml
---
- name: Deploy Rails webapp
  hosts: all
  vars:
    WEBAPP_PATH: /opt/webapps/rails
    service_webapp_repo: "{{ lookup('env', 'service_webapp_repo') }}"
    service_webapp_tag: "{{ lookup('env', 'service_webapp_tag') }}"
    db_user: "{{ lookup('env', 'db_user') }}"
    db_password: "{{ lookup('env', 'db_password') }}"
    db_name: "{{ lookup('env', 'db_name') }}"
    db_ip: "{{ lookup('env', 'db_ip') }}"

  tasks:
    - name: Notify beginning deploy
      debug:
        msg: "Beginning deploy of {{ service_webapp_repo }} version {{ service_webapp_tag }} into {{ WEBAPP_PATH }}"

    - name: Ensure packages are installed
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - ruby-dev
        - libxml2-dev
        - libxslt-dev
        - libsqlite3-dev
        - libmysqlclient-dev
        - bundler

    - name: Create webapps directory
      file:
        path: "{{ WEBAPP_PATH }}"
        state: directory
        mode: '0755'

    - name: Fetch webapp repo
      git:
        repo: "{{ service_webapp_repo }}"
        dest: "{{ WEBAPP_PATH }}"

    - name: Checkout webapp tag
      git:
        repo: "{{ service_webapp_repo }}"
        dest: "{{ WEBAPP_PATH }}"
        version: "{{ service_webapp_tag }}"

    - name: Add unicorn to Gemfile
      copy:
        content: |-
          gem 'unicorn'
        dest: "{{ WEBAPP_PATH}}/Gemfile.local"
        owner: root
        group: root
        mode: '0644'
        require:
          - apt.cmd
          - git

    - name: Bundle install
      command: bundle install --without development test rmagick postgresql
      args:
        chdir: "{{ WEBAPP_PATH }}"
        creates: "{{ WEBAPP_PATH }}/config/database.yml"
      environment:
        PATH: /usr/bin:/usr/local/bin:/bin
      becomes: yes
      registers: bundle_install_out

    - name: Generate secret
      command: bundle exec rake generate_session_store
      args:
        chdir: "{{ WEBAPP_PATH }}"
      environment:
        PATH: /usr/bin:/usr/local/bin:/bin
      becomes: yes
      when: bundle_install_out|success

    - name: Configure database.yml
      template:
        src: database.yml.erb
        dest: "{{ WEBAPP_PATH }}/config/database.yml"
      when: bundle_install_out|success

    - name: Rake database tasks
      command: bundle exec rake db:migrate RAILS_ENV=production && bundle exec rake redmine:load_default_data RAILS_ENV=production REDMINE_LANG=en
      args:
        chdir: "{{ WEBAPP_PATH }}"
      environment:
        PATH: /usr/bin:/usr/local/bin:/bin
      becomes: yes
      when: bundle_install_out|success

    - name: Create rails user
      user:
        name: rails
        shell: /bin/sh
        home: "{{ WEBAPP_PATH }}"
      when: bundle_install_out|success

    - name: Set permissions for webapp files
      file:
        path: "{{ item }}"
        owner: rails
        mode: '0755'
      with_items:
        - "{{ WEBAPP_PATH }}/files"
        - "{{ WEBAPP_PATH }}/log"
        - "{{ WEBAPP_PATH }}/tmp"
        - "{{ WEBAPP_PATH }}/public"
      when: bundle_install_out|success

    - name: Configure Unicorn service
      upstart_job:
        name: unicorn
        command: start-stop-daemon --start -c rails -d {{ WEBAPP_PATH }} --exec /usr/local/bin/bundle -- exec unicorn_rails -E production
        start_secs: 10
        process_name: unicorn
        user: rails
        start_on_boot: yes
      when: bundle_install_out|success

    - name: Disable default Apache site
      command: /usr/sbin/a2dissite default
      when: bundle_install_out|success

    - name: Add Rails vhost configuration
      template:
        src: webapp.erb
        dest: /etc/apache2/sites-available/webapp.conf
      when: bundle_install_out|success
```