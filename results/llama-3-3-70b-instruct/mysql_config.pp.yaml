```yml
---
- name: Configure MySQL
  hosts: all
  become: yes
  vars:
    root_password: 'changeme'
    old_root_password: ''
    bind_address: '{{ ansible_default_ipv4.address }}'
    port: 3306
    etc_root_password: true
    service_name: mysql
    config_file: /etc/mysql/my.cnf
    socket: /var/run/mysqld/mysqld.sock
    datadir: /var/lib/mysql
    ssl: false
    ssl_ca: ''
    ssl_cert: ''
    ssl_key: ''
    log_error: /var/log/mysql/error.log
    default_engine: ''
    root_group: root
    restart: true

  tasks:
  - name: Ensure MySQL configuration directory exists
    file:
      path: /etc/mysql
      state: directory
      mode: '0755'

  - name: Ensure MySQL configuration directory exists
    file:
      path: /etc/mysql/conf.d
      state: directory
      mode: '0755'

  - name: Configure MySQL
    template:
      src: templates/my.cnf.j2
      dest: "{{ config_file }}"
      mode: '0644'
    notify: restart mysql

  - name: Set root password
    mysql_user:
      name: root
      password: "{{ root_password }}"
      login_host: localhost
      login_user: root
      login_password: "{{ old_root_password }}"
    when: root_password is not undefined and root_password != 'UNSET'

  - name: Create .my.cnf file for root user
    template:
      src: templates/my.cnf.pass.j2
      dest: /root/.my.cnf
      mode: '0600'
    when: root_password is not undefined and root_password != 'UNSET'

  - name: Create /etc/my.cnf file if etc_root_password is true
    template:
      src: templates/my.cnf.pass.j2
      dest: /etc/my.cnf
      mode: '0644'
    when: etc_root_password and root_password is not undefined and root_password != 'UNSET'

  - name: Restart MySQL service
    service:
      name: "{{ service_name }}"
      state: restarted
    when: restart

  handlers:
  - name: restart mysql
    service:
      name: "{{ service_name }}"
      state: restarted
```