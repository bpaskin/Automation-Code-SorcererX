```yml
---
- name: Configure apt-cacher-ng
  hosts: all
  become: yes
  vars:
    apt_cacher_ipaddress: "{{ apt_cacher_ipaddress | default('') }}"
    apt_cacher_port: "{{ apt_cacher_port | default('') }}"
    apt_cacher_interface: "{{ apt_cacher_interface | default('') }}"
    apt_cacher_ssl_support: "{{ apt_cacher_ssl_support | default('') }}"
    cache_bypass: "{{ cache_bypass | default('') }}"

  tasks:
  - name: Remove proxy from /etc/apt/apt.conf
    shell:
      cmd: "sed --in-place '/^Acquire::http::Proxy/d' /etc/apt/apt.conf"
    when: "'Acquire::http::Proxy' in ((apt_conf_content | default('')) | string)"

  - name: Get apt-cacher-ng servers
    set_fact:
      apt_cacher_servers: []
    when: apt_cacher_ipaddress != "" or apt_caching_server != ""

  - name: Add local apt-cacher-ng server
    set_fact:
      apt_cacher_servers: "{{ apt_cacher_servers | default([]) + [localhost] }}"
    when: apt_cacher_ipaddress != ""

  - name: Add remote apt-cacher-ng servers
    set_fact:
      apt_cacher_servers: "{{ apt_cacher_servers | default([]) + (groups['apt_caching_server'] | default([])) }}"
    when: apt_caching_server != ""

  - name: Search for apt-cacher-ng servers
    set_fact:
      apt_cacher_servers: "{{ apt_cacher_servers | default([]) + (hostvars | selectattr('apt_caching_server', 'equalto', true) | list | map(attribute='ansible_host') | list) }}"
    when: apt_cacher_servers | length == 0

  - name: Create /etc/apt/apt.conf.d/01proxy
    template:
      src: "01proxy.j2"
      dest: "/etc/apt/apt.conf.d/01proxy"
      mode: "0644"
      owner: "root"
      group: "root"
    notify: update apt cache
    when: apt_cacher_servers | length > 0

  - name: Delete /etc/apt/apt.conf.d/01proxy
    file:
      path: "/etc/apt/apt.conf.d/01proxy"
      state: "absent"
    when: apt_cacher_servers | length == 0

  - name: Update apt cache
    apt:
      update_cache: yes
    when: apt_cacher_servers | length > 0

  handlers:
  - name: update apt cache
    apt:
      update_cache: yes
```